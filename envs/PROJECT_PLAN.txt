Project Plan
1. For 1 risky asset, find the optimal allocation (no trans. costs)
2. For 1 risky asset, see how transaction costs affect the solution.
3. For 1 risky asset, find the optimal allocation under stochastic volatility. With no trans. costs, it should just be the instantaneous optimal allocation, but see what hppens with trans. costs
4. Analyze dependence of 1-3 on the (a) timestamp; (b) objective; (c) utility function
5-8. Repeat 1-4 for 2 risky assets
9. Compare performance of optimal strategy in presence of transaction costs and stochastic volatility with (a) periodic rebalancing; (b) rebalancing with bands
10-14. Repeat 5-9 for > 2 risky assets.
15. Redo 1-14 for a continuous environment, instead of episodic. 


Environment Requirements:
1. Support for stochastic volatility
2. Support for continuous and episodic investment questions
3. Support for total wealth, relative profit, or net profit benchmarks.
4. Ability to initialize environment with the same asset process repeatedly.


Strategy for analysis:
1. Can we use simple basis functions for simpler cases?
2. Neural networks for Value function
3. Neural networks for Actor/Critic approach
4. Use planning instead of RL
5. Try using Dyna-Q+ algorithm
6. In Dyna, use the Prioritized Sweeping of Chapter 8.4, where we do a backward-focused update of states leading to states that have changed, prioritized by how big the change was. We can use a heap to keep track of the biggest changes.
When we do updates, we can use the expected values of the reward and of the value function, derived from our model
7. Updating state values based on sampling is often more efficient than calculating the expected value following a state/action pair (chapter 8.5)
8. To decide which states should be updated (in order to avoid doing a time-consuming exhaustive sweep of the entire state space), we can generate sample trajectories through the state space using the current policy, and then use the resulting state/action pairs to decide what to update.(chapter 8.6)


Testing:
1. Distributions
2. Portfolio value calculation
3. Transaction costs are deducted properly
4. Benchmarks are calculated
5. Objective functions
6. Utility functions
7. Parsing of parameters
8. Observation space
9. Action apce
10. Input parameters are utilized properly and have the desired effect on the environment


Generalization:
1. Allow transaction costs to be a single number or an array with length equal to the number of risky assets
2. Allow shorting/leverage constraints to be a single number or an array of length equal to # of risky assets


